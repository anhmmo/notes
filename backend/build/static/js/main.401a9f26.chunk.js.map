{"version":3,"sources":["components/NoteList.js","components/AddNote.js","services/notes.js","App.js","index.js"],"names":["NoteList","notes","toggleImportance","showAll","map","item","index","className","key","content","onClick","important","filter","AddNote","addNewNote","onInputChange","inputValue","onSubmit","onChange","value","type","getAll","a","axios","get","response","data","create","newObject","post","update","id","put","App","useState","setNotes","setInput","setShowAll","useEffect","noteService","catch","error","console","log","returnedNote","getNotesFromServer","event","preventDefault","noteObject","date","Date","Math","random","alert","concat","toggleImportanceOf","note","find","changedNote","then","n","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.401a9f26.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction NoteList({ notes, toggleImportance, showAll }) {\r\n  //console.log(notes);\r\n\r\n  return (\r\n    <ul>\r\n      {showAll\r\n        ? notes.map((item, index) => (\r\n            <li className=\"note\" key={index}>\r\n              {item.content}{\" \"}\r\n              <button onClick={() => toggleImportance(index)}>\r\n                {item.important ? \"make not important\" : \"make important\"}\r\n              </button>\r\n            </li>\r\n          ))\r\n        : notes\r\n            .filter((item) => item.important === true)\r\n            .map((item, index) => (\r\n              <li className=\"note\" key={index}>\r\n                {item.content}{\" \"}\r\n                <button onClick={() => toggleImportance(index)}>\r\n                  {item.important ? \"make not important\" : \"make important\"}\r\n                </button>\r\n              </li>\r\n            ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default NoteList;\r\n","import React from \"react\";\r\n\r\nfunction AddNote({ addNewNote, onInputChange, inputValue }) {\r\n  return (\r\n    <form onSubmit={addNewNote}>\r\n      <input onChange={onInputChange} value={inputValue} type=\"text\" />\r\n      <button type=\"submit\" value=\"Submit\">\r\n        save\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddNote;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const response = await axios.post(baseUrl, newObject);\r\n  return response.data;\r\n};\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\n\nimport NoteList from \"./components/NoteList\";\nimport AddNote from \"./components/AddNote\";\nimport noteService from \"./services/notes\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [inputValue, setInput] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n\n  useEffect(() => {\n    async function getNotesFromServer() {\n      let returnedNote = await noteService.getAll().catch((error) => {\n        console.log(\"fail\");\n      });\n      setNotes(returnedNote);\n    }\n    getNotesFromServer();\n  }, []);\n\n  const addNewNote = async (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: inputValue,\n      date: new Date(),\n      important: Math.random() > 0.5,\n    };\n\n    let returnedNote = await noteService.create(noteObject).catch((error) => {\n      alert(`cannot create notes`);\n    });\n    //console.log(returnedNote);\n    setNotes(notes.concat(returnedNote));\n\n    setInput(\"\");\n  };\n  const onInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const toggleImportanceOf = async (id) => {\n    id = ++id;\n\n    const note = notes.find((item) => item.id === id);\n    console.log(note);\n\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) =>\n        setNotes(\n          notes.map((note) => (note.id !== id ? note : (note = returnedNote)))\n        )\n      )\n      .catch((error) => {\n        console.log(\n          `the note '${note.content}' was already deleted from server`\n        );\n        setNotes(notes.filter((n) => n.id !== id));\n        // window.location.reload();\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <NoteList\n        notes={notes}\n        toggleImportance={toggleImportanceOf}\n        showAll={showAll}\n      />\n      <AddNote\n        addNewNote={addNewNote}\n        onInputChange={onInputChange}\n        inputValue={inputValue}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}